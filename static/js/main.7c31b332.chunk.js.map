{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Container/Container.module.css","components/Notification/Notification.module.css","components/Container/Container.jsx","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Container","children","className","style","Section","title","propType","PropType","string","isRequired","node","FeedbackOptions","options","onLeaveFeedback","btn","Object","keys","map","option","button","type","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","list","item","number","Notification","message","countReducer","prevState","nextState","App","useReducer","setGood","setNeutral","setBad","countTotalFeedback","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c31b332.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3aQ7t\",\"item\":\"Statistics_item__1ZthC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__24Yz1\",\"button\":\"FeedbackOptions_button__2Jm6j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__ANeVq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__OvSRS\"};","import React from \"react\";\r\nimport style from './Container.module.css';\r\n\r\nconst Container = ({ children }) => <div className={style.Container}>{children}</div>;\r\n    \r\nexport default Container;","import PropType from 'prop-types';\r\nimport style from './Section';\r\nconst Section = ({ title, children }) => (\r\n    <section>\r\n        <h1 className={style.title}>{title}\r\n        </h1>\r\n        {children}\r\n\r\n    </section>\r\n)\r\nSection.propType = {\r\n    title: PropType.string.isRequired,\r\n    children: PropType.node,\r\n}\r\nexport default Section","import PropTypes from 'prop-types';\r\nimport style from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n\r\n    <div className={style.btn}>\r\n        {Object.keys(options).map((option) => (\r\n            <button className={style.button}\r\n                key={option}\r\n                type=\"button\"\r\n                name={option}\r\n                onClick={() => onLeaveFeedback(option)}>{option}\r\n            </button>\r\n        ))}\r\n    </div>\r\n)\r\nFeedbackOptions.propTypes = {\r\n    option: PropTypes.arrayOf(PropTypes.string.isRequired,\r\n    )\r\n}\r\nexport default FeedbackOptions;","import PropType from 'prop-types';\r\nimport style from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return (\r\n        <ul className={style.list}>\r\n            <li className={style.item}>Good: {good}</li>\r\n            <li className={style.item}>Neutral: {neutral}</li>\r\n            <li className={style.item}>Bad: {bad}</li>\r\n            <li className={style.item}>Total: {total}</li>\r\n            <li className={style.item}>Positive feedback: {positivePercentage}%</li>\r\n\r\n        </ul>\r\n    );\r\n}\r\nStatistics.propType = {\r\n    good: PropType.number.isRequired,\r\n    neutral: PropType.number.isRequired,\r\n    bad: PropType.number.isRequired,\r\n    total: PropType.number.isRequired,\r\n    positivePercentage: PropType.number.isRequired\r\n};\r\n\r\nexport default Statistics;","import PropType from 'prop-types';\r\nimport style from './Notification.module.css';\r\nconst Notification = ({ message }) => <p className={style.title}>{message}</p>;\r\n\r\nNotification.propType = {\r\n    message:PropType.string.isRequired,\r\n}\r\nexport default Notification;\r\n","import React from \"react\";\nimport { useReducer } from \"react\";\nimport Container from \"./components/Container\";\nimport Section from \"./components/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Statistics from \"./components/Statistics\";\nimport Notification from \"./components/Notification/Notification.jsx\";\n\n\nfunction countReducer(prevState, nextState) {\n  return prevState + nextState\n}\n\nexport default function App() {\n  const [good, setGood] = useReducer(countReducer, 0)\n  const [neutral, setNeutral] = useReducer(countReducer, 0)\n  const [bad, setBad] = useReducer(countReducer, 0)\n\n  const handleIncreament = (type) => {\n    switch (type) {\n      case 'good':\n        setGood(1)\n        break\n\n      case 'neutral':\n        setNeutral(1)\n        break\n\n      case 'bad':\n        setBad(1)\n        break\n\n      default:\n        return\n    }\n  }\n  const countTotalFeedback = () => {\n    return good + neutral + bad\n  }\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round((good / countTotalFeedback()) * 100)\n  }\n\n  return (\n    <Container>\n\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={{ good, neutral, bad }}\n          onLeaveFeedback={handleIncreament}\n        />\n      </Section>\n      {countTotalFeedback() ? (\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      ) : (\n        <Notification message=\"No feedback given\" />\n      )}\n    </Container>\n  )\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}